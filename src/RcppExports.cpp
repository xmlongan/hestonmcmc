// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// cinitialize_values
NumericVector cinitialize_values(NumericVector y, NumericVector parameters, double h);
RcppExport SEXP _hestonmcmc_cinitialize_values(SEXP ySEXP, SEXP parametersSEXP, SEXP hSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type parameters(parametersSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    rcpp_result_gen = Rcpp::wrap(cinitialize_values(y, parameters, h));
    return rcpp_result_gen;
END_RCPP
}
// cmcmc
NumericVector cmcmc(NumericVector y, int g, int G, double h, double echo);
RcppExport SEXP _hestonmcmc_cmcmc(SEXP ySEXP, SEXP gSEXP, SEXP GSEXP, SEXP hSEXP, SEXP echoSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type g(gSEXP);
    Rcpp::traits::input_parameter< int >::type G(GSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    Rcpp::traits::input_parameter< double >::type echo(echoSEXP);
    rcpp_result_gen = Rcpp::wrap(cmcmc(y, g, G, h, echo));
    return rcpp_result_gen;
END_RCPP
}
// cmcmc2
NumericVector cmcmc2(NumericVector y, int g, int G, int G_sub, double h, double echo);
RcppExport SEXP _hestonmcmc_cmcmc2(SEXP ySEXP, SEXP gSEXP, SEXP GSEXP, SEXP G_subSEXP, SEXP hSEXP, SEXP echoSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type g(gSEXP);
    Rcpp::traits::input_parameter< int >::type G(GSEXP);
    Rcpp::traits::input_parameter< int >::type G_sub(G_subSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    Rcpp::traits::input_parameter< double >::type echo(echoSEXP);
    rcpp_result_gen = Rcpp::wrap(cmcmc2(y, g, G, G_sub, h, echo));
    return rcpp_result_gen;
END_RCPP
}
// crk
double crk(double prior_mu, double prior_var, NumericVector v, NumericVector y, double mu, double theta, double sigma_v, double rho, double h);
RcppExport SEXP _hestonmcmc_crk(SEXP prior_muSEXP, SEXP prior_varSEXP, SEXP vSEXP, SEXP ySEXP, SEXP muSEXP, SEXP thetaSEXP, SEXP sigma_vSEXP, SEXP rhoSEXP, SEXP hSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type prior_mu(prior_muSEXP);
    Rcpp::traits::input_parameter< double >::type prior_var(prior_varSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type v(vSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_v(sigma_vSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    rcpp_result_gen = Rcpp::wrap(crk(prior_mu, prior_var, v, y, mu, theta, sigma_v, rho, h));
    return rcpp_result_gen;
END_RCPP
}
// crmu
double crmu(double prior_mu, double prior_var, NumericVector v, NumericVector y, double k, double theta, double sigma_v, double rho, double h);
RcppExport SEXP _hestonmcmc_crmu(SEXP prior_muSEXP, SEXP prior_varSEXP, SEXP vSEXP, SEXP ySEXP, SEXP kSEXP, SEXP thetaSEXP, SEXP sigma_vSEXP, SEXP rhoSEXP, SEXP hSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type prior_mu(prior_muSEXP);
    Rcpp::traits::input_parameter< double >::type prior_var(prior_varSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type v(vSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type k(kSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_v(sigma_vSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    rcpp_result_gen = Rcpp::wrap(crmu(prior_mu, prior_var, v, y, k, theta, sigma_v, rho, h));
    return rcpp_result_gen;
END_RCPP
}
// crrho
double crrho(double rho_old, NumericVector v, NumericVector y, double mu, double k, double theta, double sigma_v, double h);
RcppExport SEXP _hestonmcmc_crrho(SEXP rho_oldSEXP, SEXP vSEXP, SEXP ySEXP, SEXP muSEXP, SEXP kSEXP, SEXP thetaSEXP, SEXP sigma_vSEXP, SEXP hSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type rho_old(rho_oldSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type v(vSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type k(kSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_v(sigma_vSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    rcpp_result_gen = Rcpp::wrap(crrho(rho_old, v, y, mu, k, theta, sigma_v, h));
    return rcpp_result_gen;
END_RCPP
}
// crsigma_v
double crsigma_v(double sigma_v_old, double prior_shape, double prior_rate, NumericVector v, NumericVector y, double mu, double k, double theta, double rho, double h);
RcppExport SEXP _hestonmcmc_crsigma_v(SEXP sigma_v_oldSEXP, SEXP prior_shapeSEXP, SEXP prior_rateSEXP, SEXP vSEXP, SEXP ySEXP, SEXP muSEXP, SEXP kSEXP, SEXP thetaSEXP, SEXP rhoSEXP, SEXP hSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type sigma_v_old(sigma_v_oldSEXP);
    Rcpp::traits::input_parameter< double >::type prior_shape(prior_shapeSEXP);
    Rcpp::traits::input_parameter< double >::type prior_rate(prior_rateSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type v(vSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type k(kSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    rcpp_result_gen = Rcpp::wrap(crsigma_v(sigma_v_old, prior_shape, prior_rate, v, y, mu, k, theta, rho, h));
    return rcpp_result_gen;
END_RCPP
}
// crtheta
double crtheta(double prior_mu, double prior_var, NumericVector v, NumericVector y, double mu, double k, double sigma_v, double rho, double h);
RcppExport SEXP _hestonmcmc_crtheta(SEXP prior_muSEXP, SEXP prior_varSEXP, SEXP vSEXP, SEXP ySEXP, SEXP muSEXP, SEXP kSEXP, SEXP sigma_vSEXP, SEXP rhoSEXP, SEXP hSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type prior_mu(prior_muSEXP);
    Rcpp::traits::input_parameter< double >::type prior_var(prior_varSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type v(vSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type k(kSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_v(sigma_vSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    rcpp_result_gen = Rcpp::wrap(crtheta(prior_mu, prior_var, v, y, mu, k, sigma_v, rho, h));
    return rcpp_result_gen;
END_RCPP
}
// crv0
double crv0(double v0_old, double prior_shape, double prior_rate, double v1, double y1, double mu, double k, double theta, double sigma_v, double rho, double h);
RcppExport SEXP _hestonmcmc_crv0(SEXP v0_oldSEXP, SEXP prior_shapeSEXP, SEXP prior_rateSEXP, SEXP v1SEXP, SEXP y1SEXP, SEXP muSEXP, SEXP kSEXP, SEXP thetaSEXP, SEXP sigma_vSEXP, SEXP rhoSEXP, SEXP hSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type v0_old(v0_oldSEXP);
    Rcpp::traits::input_parameter< double >::type prior_shape(prior_shapeSEXP);
    Rcpp::traits::input_parameter< double >::type prior_rate(prior_rateSEXP);
    Rcpp::traits::input_parameter< double >::type v1(v1SEXP);
    Rcpp::traits::input_parameter< double >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type k(kSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_v(sigma_vSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    rcpp_result_gen = Rcpp::wrap(crv0(v0_old, prior_shape, prior_rate, v1, y1, mu, k, theta, sigma_v, rho, h));
    return rcpp_result_gen;
END_RCPP
}
// crvN
double crvN(double vN_old, double vNm1, double yN, double mu, double k, double theta, double sigma_v, double rho, double h);
RcppExport SEXP _hestonmcmc_crvN(SEXP vN_oldSEXP, SEXP vNm1SEXP, SEXP yNSEXP, SEXP muSEXP, SEXP kSEXP, SEXP thetaSEXP, SEXP sigma_vSEXP, SEXP rhoSEXP, SEXP hSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type vN_old(vN_oldSEXP);
    Rcpp::traits::input_parameter< double >::type vNm1(vNm1SEXP);
    Rcpp::traits::input_parameter< double >::type yN(yNSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type k(kSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_v(sigma_vSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    rcpp_result_gen = Rcpp::wrap(crvN(vN_old, vNm1, yN, mu, k, theta, sigma_v, rho, h));
    return rcpp_result_gen;
END_RCPP
}
// crvi
double crvi(double vi_old, double vim1, double vip1, double yi, double yip1, double mu, double k, double theta, double sigma_v, double rho, double h);
RcppExport SEXP _hestonmcmc_crvi(SEXP vi_oldSEXP, SEXP vim1SEXP, SEXP vip1SEXP, SEXP yiSEXP, SEXP yip1SEXP, SEXP muSEXP, SEXP kSEXP, SEXP thetaSEXP, SEXP sigma_vSEXP, SEXP rhoSEXP, SEXP hSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type vi_old(vi_oldSEXP);
    Rcpp::traits::input_parameter< double >::type vim1(vim1SEXP);
    Rcpp::traits::input_parameter< double >::type vip1(vip1SEXP);
    Rcpp::traits::input_parameter< double >::type yi(yiSEXP);
    Rcpp::traits::input_parameter< double >::type yip1(yip1SEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type k(kSEXP);
    Rcpp::traits::input_parameter< double >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_v(sigma_vSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    rcpp_result_gen = Rcpp::wrap(crvi(vi_old, vim1, vip1, yi, yip1, mu, k, theta, sigma_v, rho, h));
    return rcpp_result_gen;
END_RCPP
}
// crHeston
NumericVector crHeston(double v_0, double n_segment, NumericVector par, int N, double h);
RcppExport SEXP _hestonmcmc_crHeston(SEXP v_0SEXP, SEXP n_segmentSEXP, SEXP parSEXP, SEXP NSEXP, SEXP hSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type v_0(v_0SEXP);
    Rcpp::traits::input_parameter< double >::type n_segment(n_segmentSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type par(parSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    rcpp_result_gen = Rcpp::wrap(crHeston(v_0, n_segment, par, N, h));
    return rcpp_result_gen;
END_RCPP
}
// gen_data
void gen_data(std::string par_name, NumericVector par, int N, int N_rep, double h, double n_segment);
RcppExport SEXP _hestonmcmc_gen_data(SEXP par_nameSEXP, SEXP parSEXP, SEXP NSEXP, SEXP N_repSEXP, SEXP hSEXP, SEXP n_segmentSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type par_name(par_nameSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type par(parSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type N_rep(N_repSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    Rcpp::traits::input_parameter< double >::type n_segment(n_segmentSEXP);
    gen_data(par_name, par, N, N_rep, h, n_segment);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_hestonmcmc_cinitialize_values", (DL_FUNC) &_hestonmcmc_cinitialize_values, 3},
    {"_hestonmcmc_cmcmc", (DL_FUNC) &_hestonmcmc_cmcmc, 5},
    {"_hestonmcmc_cmcmc2", (DL_FUNC) &_hestonmcmc_cmcmc2, 6},
    {"_hestonmcmc_crk", (DL_FUNC) &_hestonmcmc_crk, 9},
    {"_hestonmcmc_crmu", (DL_FUNC) &_hestonmcmc_crmu, 9},
    {"_hestonmcmc_crrho", (DL_FUNC) &_hestonmcmc_crrho, 8},
    {"_hestonmcmc_crsigma_v", (DL_FUNC) &_hestonmcmc_crsigma_v, 10},
    {"_hestonmcmc_crtheta", (DL_FUNC) &_hestonmcmc_crtheta, 9},
    {"_hestonmcmc_crv0", (DL_FUNC) &_hestonmcmc_crv0, 11},
    {"_hestonmcmc_crvN", (DL_FUNC) &_hestonmcmc_crvN, 9},
    {"_hestonmcmc_crvi", (DL_FUNC) &_hestonmcmc_crvi, 11},
    {"_hestonmcmc_crHeston", (DL_FUNC) &_hestonmcmc_crHeston, 5},
    {"_hestonmcmc_gen_data", (DL_FUNC) &_hestonmcmc_gen_data, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_hestonmcmc(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
